{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","services/contacts-api.js","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Section/Section.jsx","components/TechInfo/TechInfo.js","redux/actions.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","getContacts","a","axios","get","response","data","postContact","name","number","post","contact","console","log","deleteContact","id","delete","defaults","baseURL","fetchContacts","createAsyncThunk","_","rejectWithValue","contacts","message","addContacts","deleteContacts","state","getFilter","filteredContacts","getError","error","getIsLoading","isLoading","getFilteredContacts","createSelector","normalizedFilteredName","toLowerCase","filter","includes","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","handleInputChange","event","target","value","onSubmit","preventDefault","find","toast","autoComplete","className","style","inputName","onChange","type","placeholder","pattern","title","required","inputNumber","formButton","autoClose","ContactItem","onDelete","onClick","deleteBtn","ContactList","onDeleteContact","orderList","map","contactListItem","Filter","onFilterChange","filterInput","Section","children","section","TechInfo","filterContacts","createAction","payload","App","errorMessage","useEffect","createReducer","fulfilled","action","rejected","pending","combineReducers","store","configureStore","reducer","contactReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gJACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,YAAc,iCAAiC,WAAa,kC,mBCAzHD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,gBAAkB,uC,mBCA/ED,EAAOC,QAAU,CAAC,UAAY,iC,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,8B,mBCAhCD,EAAOC,QAAU,CAAC,QAAU,2B,6LCGbC,I,2EAAf,4BAAAC,EAAA,sEAC2BC,IAAMC,IAAI,aADrC,cACUC,EADV,yBAEWA,EAASC,MAFpB,4C,+BAKeC,E,gFAAf,WAA2BC,EAAMC,GAAjC,eAAAP,EAAA,sEAC0BC,IAAMO,KAAK,YAAa,CAC1CF,OACAC,WAHR,cACUE,EADV,OAKIC,QAAQC,IAAIF,GALhB,kBAMWA,EAAQL,MANnB,4C,+BASeQ,E,8EAAf,WAA6BC,GAA7B,SAAAb,EAAA,sEACUC,IAAMa,OAAN,oBAA0BD,IADpC,6E,sBAhBAZ,IAAMc,SAASC,QAAU,8CCKzB,I,MAAMC,EAAgBC,YAClB,yBADkC,uCAElC,WAAOC,EAAP,oBAAAnB,EAAA,6DAAYoB,EAAZ,EAAYA,gBAAZ,kBAE+BrB,IAF/B,cAEcsB,EAFd,yBAGeA,GAHf,yDAKeD,EAAgB,KAAME,UALrC,yDAFkC,yDAYhCC,EAAcL,YAChB,uBADgC,uCAEhC,qCAAAlB,EAAA,6DAASM,EAAT,EAASA,KAAMC,EAAf,EAAeA,OAAYa,EAA3B,EAA2BA,gBAA3B,kBAE8Bf,EAAYC,EAAMC,GAFhD,cAEcE,EAFd,yBAGeA,GAHf,yDAKeW,EAAgB,KAAME,UALrC,yDAFgC,yDAY9BE,EAAiBN,YACnB,0BADmC,uCAEnC,WAAOL,EAAP,kBAAAb,EAAA,6DAAaoB,EAAb,EAAaA,gBAAb,kBAEcR,EAAcC,GAF5B,gCAGeA,GAHf,yDAKeO,EAAgB,KAAME,UALrC,yDAFmC,yD,QC7B1BvB,EAAc,SAAA0B,GAAK,OAAIA,EAAMJ,SAASA,UACtCK,EAAY,SAAAD,GAAK,OAAIA,EAAMJ,SAASM,kBACpCC,EAAW,SAAAH,GAAK,OAAIA,EAAMJ,SAASQ,OACnCC,EAAe,SAAAL,GAAK,OAAIA,EAAMJ,SAASU,WAEvCC,EAAsBC,YAC/B,CAAClC,EAAa2B,IACd,SAACL,EAAUM,GACP,IAAMO,EAAyBP,EAAiBQ,cAEhD,OAAOd,EAASe,QAAO,SAAA3B,GAAO,OAC1BA,EAAQH,KAAK6B,cAAcE,SAASH,S,wBCsEjCI,EA1EK,WAChB,MAAwBC,mBAAS,IAAjC,mBAAOjC,EAAP,KAAakC,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOhC,EAAP,KAAekC,EAAf,KACMC,EAAWC,cACXtB,EAAWuB,YAAY7C,GAEvB8C,EAAoB,SAAAC,GACtB,MAAwBA,EAAMC,OAAtBzC,EAAR,EAAQA,KAAM0C,EAAd,EAAcA,MACD,SAAT1C,GAAiBkC,EAAQQ,GAChB,WAAT1C,GAAmBmC,EAAUO,IAmBrC,OACI,uBAAMC,SAjBW,SAAAH,GACjBA,EAAMI,iBACgB7B,EAAS8B,MAC3B,SAAA1C,GAAO,OAAIA,EAAQH,KAAK6B,gBAAkB7B,EAAK6B,iBAI/CiB,IAAMvB,MAAN,UAAevB,EAAf,6BAIJoC,EAASnB,EAAYjB,EAAMC,IAC3BiC,EAAQ,IACRC,EAAU,MAIoBY,aAAa,MAA3C,UACI,8BACI,yCAEI,uBACIC,UAAWC,IAAMC,UACjBC,SAAUZ,EACVa,KAAK,OACLpD,KAAK,OACL0C,MAAO1C,EACPqD,YAAY,YACZC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,SAIpB,8BACI,2CAEI,uBACIR,UAAWC,IAAMQ,YACjBN,SAAUZ,EACVa,KAAK,MACLpD,KAAK,SACL0C,MAAOzC,EACPoD,YAAY,YACZC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,SAIpB,wBAAQJ,KAAK,SAASJ,UAAWC,IAAMS,WAAvC,yBAGA,cAAC,IAAD,CAAgBC,UAAW,U,iBCjDxBC,EAtBK,SAAC,GAAD,IAAG5D,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQ4D,EAAjB,EAAiBA,SAAUtD,EAA3B,EAA2BA,GAA3B,OAChB,qCACI,iCACKP,EADL,KACaC,KAEb,wBACImD,KAAK,SACLU,QAAS,kBAAMD,EAAStD,IACxByC,UAAWC,IAAMc,UAHrB,wB,iBCqBOC,EAzBK,SAAC,GAAD,IAAGjD,EAAH,EAAGA,SAAUkD,EAAb,EAAaA,gBAAb,OAChB,oBAAIjB,UAAWC,IAAMiB,UAArB,SACKnD,EAASoD,KAAI,gBAAG5D,EAAH,EAAGA,GAAIP,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACV,oBAAa+C,UAAWC,IAAMmB,gBAA9B,SACI,cAAC,EAAD,CACIpE,KAAMA,EACNC,OAAQA,EACRM,GAAIA,EACJsD,SAAUI,KALT1D,S,iBCeN8D,EAnBA,SAAC,GAAD,IAAG3B,EAAH,EAAGA,MAAO4B,EAAV,EAAUA,eAAV,OACX,8BACI,0DAEI,uBACIlB,KAAK,OACLJ,UAAWC,IAAMsB,YACjB7B,MAAOA,EACPS,SAAUmB,U,iBCKXE,EAZC,SAAC,GAAD,IAAGjB,EAAH,EAAGA,MAAOkB,EAAV,EAAUA,SAAV,OACZ,0BAASzB,UAAWC,IAAMyB,QAA1B,UACKnB,GAAS,6BAAKA,IACdkB,MCAME,EANE,SAAC,GAAD,IAAG3D,EAAH,EAAGA,QAAH,OAAiB,6BAAKA,KCCjC4D,EAAiBC,YAAa,mBAAmB,SAAA1E,GAAO,MAAK,CAC/D2E,QAAS3E,MCgDE4E,EAnCH,WACR,IAAM3C,EAAWC,cACXhB,EAAmBiB,YAAYlB,GAC/BL,EAAWuB,YAAYZ,GACvBsD,EAAe1C,YAAYhB,GAC3BG,EAAYa,YAAYd,GAS9B,OAJAyD,qBAAU,WACN7C,EAASzB,OACV,CAACyB,IAGA,sBAAKY,UAAU,SAAf,UACI,cAAC,EAAD,CAASO,MAAM,YAAf,SACI,cAAC,EAAD,MAEJ,eAAC,EAAD,CAASA,MAAM,WAAf,UACI,cAAC,EAAD,CAAQe,eAZH,SAAA9B,GAAK,OAAIJ,EAASwC,EAAepC,EAAMC,OAAOC,SAYjBA,MAAOrB,IACxC2D,GACG,cAAC,EAAD,CAAUhE,QAAQ,8CAErBS,GAAa,cAAC,EAAD,CAAUT,QAAQ,eAEhC,cAAC,EAAD,CACID,SAAUA,EACVkD,gBArBQ,SAAA1D,GAAE,OAAI6B,EAASlB,EAAeX,c,gCCnBpDQ,GAAWmE,YAAc,IAAD,mBACzBvE,EAAcwE,WAAY,SAACtE,EAAGuE,GAAJ,MAAe,CAACA,EAAON,YADxB,cAEzB7D,EAAYkE,WAAY,SAAChE,EAAOiE,GAAR,6BAAuBjE,GAAvB,CAA8BiE,EAAON,aAFpC,cAGzB5D,EAAeiE,WAAY,SAAChE,EAAOiE,GAAR,OACxBjE,EAAMW,QAAO,SAAA3B,GAAO,OAAIA,EAAQI,KAAO6E,EAAON,cAJxB,IAOxBzD,GAAmB6D,YAAc,GAAD,eACjCN,GAAiB,SAAC/D,EAAGuE,GAAJ,OAAeA,EAAON,YAGtCvD,GAAQ2D,YAAc,MAAD,mBACtBvE,EAAc0E,UAAW,SAACxE,EAAGuE,GAAJ,OAAeA,EAAON,WADzB,cAEtB7D,EAAYoE,UAAW,SAACxE,EAAGuE,GAAJ,OAAeA,EAAON,WAFvB,cAGtB5D,EAAemE,UAAW,SAACxE,EAAGuE,GAAJ,OAAeA,EAAON,WAH1B,cAItBnE,EAAc2E,SAAU,kBAAM,QAJR,cAKtBrE,EAAYqE,SAAU,kBAAM,QALN,cAMtBpE,EAAeoE,SAAU,kBAAM,QANT,IASrB7D,GAAYyD,aAAc,GAAD,mBAC1BvE,EAAc2E,SAAU,kBAAM,KADJ,cAE1BrE,EAAYqE,SAAU,kBAAM,KAFF,cAG1BpE,EAAeoE,SAAU,kBAAM,KAHL,cAI1B3E,EAAcwE,WAAY,kBAAM,KAJN,cAK1BlE,EAAYkE,WAAY,kBAAM,KALJ,cAM1BjE,EAAeiE,WAAY,kBAAM,KANP,cAO1BxE,EAAc0E,UAAW,kBAAM,KAPL,cAQ1BpE,EAAYoE,UAAW,kBAAM,KARH,cAS1BnE,EAAemE,UAAW,kBAAM,KATN,IAYhBE,gBAAgB,CAC3BxE,YACAM,oBACAE,SACAE,eCrCS+D,GAAQC,YAAe,CAChCC,QAAS,CACL3E,SAAU4E,MCGlBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACI,cAAC,EAAD,QAGRO,SAASC,eAAe,W","file":"static/js/main.06fabd56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputName\":\"ContactForm_inputName__1Nfph\",\"inputNumber\":\"ContactForm_inputNumber__3EQlC\",\"formButton\":\"ContactForm_formButton__Bqkez\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderList\":\"ContactList_orderList__iWbBf\",\"contactListItem\":\"ContactList_contactListItem__3y-be\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"ContactItem_deleteBtn__KvEmq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__19_Zu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__27h0w\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61bdf4c12a1dd4001708a1af.mockapi.io';\r\n\r\nasync function getContacts() {\r\n    const response = await axios.get('/contacts');\r\n    return response.data;\r\n}\r\n\r\nasync function postContact(name, number) {\r\n    const contact = await axios.post('/contacts', {\r\n        name,\r\n        number,\r\n    });\r\n    console.log(contact);\r\n    return contact.data;\r\n}\r\n\r\nasync function deleteContact(id) {\r\n    await axios.delete(`/contacts/${id}`);\r\n    return;\r\n}\r\n\r\nexport { getContacts, postContact, deleteContact };\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport {\r\n    getContacts,\r\n    postContact,\r\n    deleteContact,\r\n} from '../services/contacts-api';\r\n\r\nconst fetchContacts = createAsyncThunk(\r\n    'contacts/fetchContacts',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const contacts = await getContacts();\r\n            return contacts;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    },\r\n);\r\n\r\nconst addContacts = createAsyncThunk(\r\n    'contacts/addContacts',\r\n    async ({ name, number }, { rejectWithValue }) => {\r\n        try {\r\n            const contact = await postContact(name, number);\r\n            return contact;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    },\r\n);\r\n\r\nconst deleteContacts = createAsyncThunk(\r\n    'contacts/deleteContacts',\r\n    async (id, { rejectWithValue }) => {\r\n        try {\r\n            await deleteContact(id);\r\n            return id;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    },\r\n);\r\n\r\nexport { fetchContacts, addContacts, deleteContacts };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.contacts;\r\nexport const getFilter = state => state.contacts.filteredContacts;\r\nexport const getError = state => state.contacts.error;\r\nexport const getIsLoading = state => state.contacts.isLoading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n    [getContacts, getFilter],\r\n    (contacts, filteredContacts) => {\r\n        const normalizedFilteredName = filteredContacts.toLowerCase();\r\n\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normalizedFilteredName),\r\n        );\r\n    },\r\n);\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { addContacts } from '../../redux/operations';\r\nimport { getContacts } from '../../redux/selectors';\r\nimport style from './ContactForm.module.css';\r\n\r\nconst ContactForm = () => {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(getContacts);\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        if (name === 'name') setName(value);\r\n        if (name === 'number') setNumber(value);\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const doubleContact = contacts.find(\r\n            contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n        );\r\n\r\n        if (doubleContact) {\r\n            toast.error(`${name} is already in contacts`);\r\n            return;\r\n        }\r\n\r\n        dispatch(addContacts(name, number));\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <div>\r\n                <label>\r\n                    Name\r\n                    <input\r\n                        className={style.inputName}\r\n                        onChange={handleInputChange}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        placeholder=\"text here\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    Number\r\n                    <input\r\n                        className={style.inputNumber}\r\n                        onChange={handleInputChange}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        placeholder=\"text here\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n            </div>\r\n            <button type=\"submit\" className={style.formButton}>\r\n                Add contact\r\n            </button>\r\n            <ToastContainer autoClose={2000} />\r\n        </form>\r\n    );\r\n};\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport style from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ name, number, onDelete, id }) => (\r\n    <>\r\n        <span>\r\n            {name}: {number}\r\n        </span>\r\n        <button\r\n            type=\"submit\"\r\n            onClick={() => onDelete(id)}\r\n            className={style.deleteBtn}\r\n        >\r\n            Delete\r\n        </button>\r\n    </>\r\n);\r\n\r\nContactItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem';\r\nimport style from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n    <ol className={style.orderList}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={style.contactListItem}>\r\n                <ContactItem\r\n                    name={name}\r\n                    number={number}\r\n                    id={id}\r\n                    onDelete={onDeleteContact}\r\n                />\r\n            </li>\r\n        ))}\r\n    </ol>\r\n);\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ),\r\n};\r\n\r\nexport default ContactList;\r\n","import style from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onFilterChange }) => (\r\n    <div>\r\n        <label>\r\n            Find contacts by name\r\n            <input\r\n                type=\"text\"\r\n                className={style.filterInput}\r\n                value={value}\r\n                onChange={onFilterChange}\r\n            />\r\n        </label>\r\n    </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onFilterChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport style from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <section className={style.section}>\r\n        {title && <h2>{title}</h2>}\r\n        {children}\r\n    </section>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nconst TechInfo = ({ message }) => <h2>{message}</h2>;\r\n\r\nTechInfo.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TechInfo;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterContacts = createAction('contacts/filter', contact => ({\r\n    payload: contact,\r\n}));\r\n\r\nexport { filterContacts };\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport Section from './components/Section';\r\nimport TechInfo from './components/TechInfo/';\r\nimport { filterContacts } from './redux/actions';\r\nimport { deleteContacts, fetchContacts } from './redux/operations';\r\nimport {\r\n    getError,\r\n    getFilter,\r\n    getFilteredContacts,\r\n    getIsLoading,\r\n} from './redux/selectors';\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n    const filteredContacts = useSelector(getFilter);\r\n    const contacts = useSelector(getFilteredContacts);\r\n    const errorMessage = useSelector(getError);\r\n    const isLoading = useSelector(getIsLoading);\r\n\r\n    const onDeleteContact = id => dispatch(deleteContacts(id));\r\n    const findName = event => dispatch(filterContacts(event.target.value));\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchContacts());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"appDiv\">\r\n            <Section title=\"Phonebook\">\r\n                <ContactForm />\r\n            </Section>\r\n            <Section title=\"Contacts\">\r\n                <Filter onFilterChange={findName} value={filteredContacts} />\r\n                {errorMessage && (\r\n                    <TechInfo message=\"Something wrong! Please, try again later.\" />\r\n                )}\r\n                {isLoading && <TechInfo message=\"Loading...\" />}\r\n\r\n                <ContactList\r\n                    contacts={contacts}\r\n                    onDeleteContact={onDeleteContact}\r\n                />\r\n            </Section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport { filterContacts } from './actions';\r\nimport { fetchContacts, addContacts, deleteContacts } from './operations';\r\n\r\nconst contacts = createReducer([], {\r\n    [fetchContacts.fulfilled]: (_, action) => [action.payload],\r\n    [addContacts.fulfilled]: (state, action) => [...state, action.payload],\r\n    [deleteContacts.fulfilled]: (state, action) =>\r\n        state.filter(contact => contact.id !== action.payload),\r\n});\r\n\r\nconst filteredContacts = createReducer('', {\r\n    [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContacts.rejected]: (_, action) => action.payload,\r\n    [addContacts.rejected]: (_, action) => action.payload,\r\n    [deleteContacts.rejected]: (_, action) => action.payload,\r\n    [fetchContacts.pending]: () => null,\r\n    [addContacts.pending]: () => null,\r\n    [deleteContacts.pending]: () => null,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [addContacts.pending]: () => true,\r\n    [deleteContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [addContacts.fulfilled]: () => false,\r\n    [deleteContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n    [addContacts.rejected]: () => false,\r\n    [deleteContacts.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filteredContacts,\r\n    error,\r\n    isLoading,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './reducers';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: contactReducer,\r\n    },\r\n});\r\n","import 'modern-normalize/modern-normalize.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport './index.css';\r\nimport { store } from './redux/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}